spring.application.name=product-service
server.port=8082
logging.level.org.springframework.web=DEBUG

# db
spring.datasource.url=jdbc:postgresql://localhost:5432/spring_products
spring.datasource.username=postgres
spring.datasource.password=postgres
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.default_schema=public
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# redis
spring.cache.type=redis
spring.data.redis.host=localhost
spring.data.redis.port=6379

# web
spring.data.web.pageable.one-indexed-parameters=true
server.error.include-stacktrace=on-param

# kafka
spring.kafka.bootstrap-servers=localhost:29092
logging.level.org.springframework.kafka=debug

spring.kafka.consumer.bootstrap-servers: localhost:29092
spring.kafka.consumer.group-id: product-service-group
spring.kafka.consumer.auto-offset-reset: earliest
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.producer.bootstrap-servers: localhost:29092
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

# eureka
eureka.client.service-url.default-zone=http://localhost:8761/eureka

# zipkin
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.tracing.sampling.probability=1.0